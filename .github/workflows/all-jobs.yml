name: Playwright Tests/Zip Files/Publish Chrome Extension
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: |
        cd tests/e2e 
        npm ci
    - name: Install Playwright Browsers
      run: |
        cd tests/e2e
        npx playwright install --with-deps
    - name: Run Playwright tests
      run: |
        cd tests/e2e
        npx playwright test
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
 
  zip-files:
    if: github.ref == 'refs/heads/master' && success()    # only runs for master branch and if the test job is successful
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: vimtor/action-zip@v1.2
        with:
          files: frontend
          dest: frontend.zip
      - uses: actions/upload-artifact@v4
        with:
          name: loggingFrontendZipFile    # storing zip file as artifact for logging purposes
          path: frontend.zip
  
  publish-chrome:
    if: github.ref == 'refs/heads/master' && success() && github.event_name == 'push'   # only runs for master branch, if the previous jobs are successful and if the event is a push
    runs-on: ubuntu-latest
    needs: zip-files
    steps:
      - uses: actions/checkout@v4
      - name: Download frontend.zip
        uses: actions/download-artifact@v4
        with:
          name: loggingFrontendZipFile
      - name: Extract frontend.zip
        run: |
          unzip loggingFrontendZipFile.zip/frontend.zip -d extracted
      - name: Upload to Chrome Web Store
        uses: mobilefirstllc/cws-publish@latest
        with:
          action: 'upload'
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.SECRET }}
          refresh_token: ${{ secrets.REFRESH_TOKEN }}
          extension_id: ${{ secrets.EXTENSION_ID }}
          zip_file: frontend.zip